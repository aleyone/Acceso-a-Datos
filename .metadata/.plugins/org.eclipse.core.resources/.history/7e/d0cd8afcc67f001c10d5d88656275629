package es.addaev06.ae06;

import org.bson.Document;
import org.json.JSONObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import java.util.logging.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;

public class main_before_vmc {
	MongoCollection<Document> collection;
	MongoCursor<Document> cursor;
	List<String> id=new ArrayList<String>();
	int contador;
	String nextId;

	public MongoClient createConexion() {
		Logger mongoLogger = Logger.getLogger("org.mongodb.driver");
		mongoLogger.setLevel(Level.SEVERE);
		MongoClient client = new MongoClient("localhost", 27017);
		MongoDatabase db = client.getDatabase("Biblioteca");
		collection = db.getCollection("Libros");
		return client;
	}

	public void showAll() {
		System.out.println(loopList());
	}

	public String loopList() {
		
		cursor = collection.find().iterator();
		String resultado="";
		while (cursor.hasNext()) {
			JSONObject obj = new JSONObject(cursor.next().toJson());
			resultado += ("ID: " + obj.getString("Id") + " - TITULO: " + obj.getString("Titol")+"\n");
			id.add(obj.getString("Id"));			
		}
		/*for (int i=0; i<id.size(); i++) {
			contador++;
		}*/
		//nextId = String.valueOf(contador+1);
		//System.out.print(nextId);
		return resultado;
	}

	public String showOne(String id) {
		String unido = "";
		List<String> resultado = new ArrayList<String>();
		MongoCursor<Document> cursor = collection.find(Filters.eq("Id", id)).iterator();
		while (cursor.hasNext()) {
			JSONObject obj = new JSONObject(cursor.next().toJson());
			resultado.add("_id Mongo: " + obj.get("_id") + "\n" + "Titulo: " + obj.getString("Titol") + "\n" + "Autor: "
					+ obj.getString("Autor") + "\n" + "Año nacimiento: " + obj.getString("Any_naixement") + "\n"
					+ "Año publicación: " + obj.getString("Any_publicacio") + "\n" + "Editorial: "
					+ obj.getString("Editorial") + "\n" + "Nº páginas: " + obj.getString("Nombre_pagines"));
		}
		for (int i = 0; i < resultado.size(); i++) {
			unido += resultado.get(i) + "\n";
		}
		System.out.print(unido);

		return unido; // preparamos para VMC
	}

	/*public void createRegistry(String titulo, String autor, String anyo_nac, String anyo_pub, String editorial,
			String num_pag) {
		Document doc = new Document();
		doc.append("Id", nextId);
		doc.append("Titol", titulo);
		doc.append("Autor", autor);
		doc.append("Any_naixement", anyo_nac);
		doc.append("Any_publicacio", anyo_pub);
		doc.append("Editorial", editorial);
		doc.append("Nombre_pagines", num_pag);
		collection.insertOne(doc);

	}*/

	public static void main(String[] args) {
		main_before_vmc prueba = new main_before_vmc();
		prueba.createConexion();
		prueba.showAll();
		//prueba.showOne("1");
		//prueba.createRegistry("Título inventado", "Autor inventado", "Año nacimiento inventado", "Año publicación inventado", "Editorial inventada", "1200 (inventado)");
		prueba.showAll();

	}
}
