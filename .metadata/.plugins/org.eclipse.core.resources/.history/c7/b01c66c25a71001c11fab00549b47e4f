package es.add.aemongodb;

import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;

public class Controlador {
	private Modelo modelo;
	private Vista vista;
	private ActionListener alCreateConnection, alCloseConnection, alShowAll, alShowOne, alDeleteOne, alUpdate,
			alCreateBook, alLoadID, alRemoveID;
	private String listBook;

	public Controlador(Modelo modelo, Vista vista) {
		this.modelo = modelo;
		this.vista = vista;
		control();
	}

	public void control() {
		alCreateConnection = new ActionListener() {
			public void actionPerformed(ActionEvent actionEvent) {
				MongoCollection cliente = modelo.createConnection();
				vista.getTextArea().setText("Se ha creado correctamente la conexión a la base de datos.\n\n"
						+ "- MOSTRAR REGISTROS: Para ver todos los registros, pulsa 'Mostrar todos los registros'.\n\n"
						+ "- MODIFICAR REGISTRO: Selecciona un criterio con el radiobutton, introduce el dato deseado en el campo de texto,\n"
						+ "modifica en la línea inferior ese criterio y pulsa 'Modifica el registro\n\n"
						+ "- CREAR REGISTRO: Introduce datos en la línea inferior y pulsa 'Crear registro'.\n\n"
						+ "- ELIMINAR REGISTROS: Selecciona un criterio con el radiobutton, introduce el dato deseado en el campo de texto,\n"
						+ "pulsa 'Eliminar'.\n\n");
				}
		};
		vista.getBtnCreateConnection().addActionListener(alCreateConnection);
		
		alShowAll = new ActionListener() {
			public void actionPerformed(ActionEvent actionEvent) {
				vista.getTextArea().setText(null);
				MongoCollection collection = modelo.createConnection();
				vista.getTextArea().setText(modelo.listBooks(collection));
				
			}
		};
		vista.getBtnShowAll().addActionListener(alShowAll);
		
		
		alShowOne = new ActionListener() {
			public void actionPerformed(ActionEvent actionEvent) {
				String criterio = "";
				String busqueda ="";
				String resultado ="";
				vista.getTextArea().setText(null);
				MongoCollection collection = modelo.createConnection();
				busqueda = vista.getTextField().getText();
				if (vista.getRadioGrupo().isSelected()){
					criterio = "Grupo";
					String grupo = vista.getTextField_Grupo().getText();
					resultado = modelo.readCriteria(collection, criterio, busqueda);
				} else if (vista.getRadioTitulo().isSelected()) {
					criterio ="Titulo";
					String titulo = vista.getTextField_Titulo().getText();
					resultado = modelo.readCriteria(collection, criterio, busqueda);
				} else if (vista.getRadioFormato().isSelected()) {
					criterio = "Formato";
					String formato = vista.getTextField_Formato().getText();
					resultado = modelo.readCriteria(collection, criterio, busqueda);
				} else if (vista.getRdbtnAnyoP().isSelected()) {
					criterio = "Anyo";
					String año = vista.getTextField_Anyo().getText();
					resultado = modelo.readCriteria(collection, criterio, (int) Integer.parseInt(busqueda));
				}				
				vista.getTextArea().setText(resultado);
				
			}
		};
		vista.getBtnShowOne().addActionListener(alShowOne);
		
		alDeleteOne = new ActionListener() {
			public void actionPerformed(ActionEvent actionEvent) {
				String criterio = "";
				String busqueda ="";
				vista.getTextArea().setText(null);
				MongoCollection collection = modelo.createConnection();
				busqueda = vista.getTextField().getText();
				if (vista.getRadioGrupo().isSelected()){
					criterio = "Grupo";
					String grupo = vista.getTextField_Grupo().getText();
					modelo.deleteMany(collection, criterio, busqueda);
				} else if (vista.getRadioTitulo().isSelected()) {
					criterio ="Titulo";
					String titulo = vista.getTextField_Titulo().getText();
					modelo.deleteMany(collection, criterio, busqueda);
				} else if (vista.getRadioFormato().isSelected()) {
					criterio = "Formato";
					String formato = vista.getTextField_Formato().getText();
					modelo.deleteMany(collection, criterio, busqueda);
				} else if (vista.getRdbtnAnyoP().isSelected()) {
					criterio = "Anyo";
					String año = vista.getTextField_Anyo().getText();
					modelo.deleteMany(collection, criterio, (int) Integer.parseInt(busqueda));
				}				
				
				vista.getTextArea().setText("Ha(n) sido eliminado(s) el(los) registro(s) de la base de datos.");
				
			}
		};
		vista.getBtnDelete().addActionListener(alDeleteOne);
		
		alUpdate = new ActionListener() {
			public void actionPerformed(ActionEvent actionEvent) {
				String criterio = "";
				String busqueda ="";
				vista.getTextArea().setText(null);
				MongoCollection collection = modelo.createConnection();
				busqueda = vista.getTextField().getText();
				if (vista.getRadioGrupo().isSelected()){
					criterio = "Grupo";
					String grupo = vista.getTextField_Grupo().getText();
					modelo.updateRegistry(collection, criterio, busqueda, grupo);
				} else if (vista.getRadioTitulo().isSelected()) {
					criterio ="Titulo";
					String titulo = vista.getTextField_Titulo().getText();
					modelo.updateRegistry(collection, criterio, busqueda, titulo);
				} else if (vista.getRadioFormato().isSelected()) {
					criterio = "Formato";
					String formato = vista.getTextField_Formato().getText();
					modelo.updateRegistry(collection, criterio, busqueda, formato);
				} else if (vista.getRdbtnAnyoP().isSelected()) {
					criterio = "Anyo";
					String año = vista.getTextField_Anyo().getText();
					modelo.updateRegistry(collection, criterio, (int) Integer.parseInt(busqueda), (int) Integer.parseInt(año));
				}				
				
				vista.getTextArea().setText("Ha(n) sido modificado(s) el(los) registro(s) de la base de datos.");
				
			}
		};
		vista.getBtnUpdate().addActionListener(alUpdate);
		
		alCreateBook = new ActionListener() {
			public void actionPerformed(ActionEvent actionEvent) {
				vista.getTextArea().setText(null);
				MongoCollection collection = modelo.createConnection();
				String grupo = vista.getTextField_Grupo().getText();
				String titulo = vista.getTextField_Titulo().getText();
				String año_p = vista.getTextField_Anyo().getText();
				String formato = vista.getTextField_Formato().getText();
				modelo.createBook(collection, grupo, titulo, (int)Integer.parseInt(año_p), formato);
				vista.getTextArea().setText("Ha sido añadido el registro a MongoDB.");
				
			}
		};
		vista.getBtnCreate().addActionListener(alCreateBook);
		
	}
}

